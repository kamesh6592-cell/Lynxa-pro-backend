// pages/api/webhooks/clerk.js
import { getEnv } from '../../../utils/env.js';
import getNile from '../../../utils/nile.js';

export default async function handler(req, res) {
  // 1. Verify the webhook signature to ensure it's from Clerk
  const webhookSecret = getEnv('CLERK_WEBHOOK_SECRET');
  const svix_id = req.headers["svix-id"];
  const svix_timestamp = req.headers["svix-timestamp"];
  const svix_signature = req.headers["svix-signature"];

  if (!svix_id || !svix_timestamp || !svix_signature) {
    return res.status(400).json({ error: 'Missing webhook headers' });
  }
  
  // For simplicity, we are skipping signature verification here,
  // but in a production app, you MUST verify the signature.
  // You can use the `svix` library for this.
  // npm install svix
  // const wh = new Webhook(webhookSecret);
  // const payload = wh.verify(JSON.stringify(req.body), headers);
  
  const { type, data } = req.body;

  // 2. Handle the 'user.created' event
  if (type === 'user.created') {
    console.log('Webhook received: user.created for', data.id);
    try {
      const nile = await getNile();
      
      // Extract the data we need from the Clerk payload
      const { id, email_addresses, first_name, last_name } = data;
      const email = email_addresses[0]?.email_address;

      if (!id || !email) {
        return res.status(400).json({ error: 'Invalid user data from Clerk' });
      }

      // 3. Insert the new user into our database
      await nile.db.query(
        `INSERT INTO users (id, email, first_name, last_name) 
         VALUES ($1, $2, $3, $4) 
         ON CONFLICT (id) DO NOTHING`, // Prevent errors if the user already exists
        [id, email, first_name, last_name]
      );

      console.log(`User ${id} successfully synced to database.`);
      return res.status(200).json({ message: 'User synced successfully' });

    } catch (error) {
      console.error('Error syncing user to database:', error);
      return res.status(500).json({ error: 'Database error' });
    }
  }

  // 4. Respond to Clerk that we received the webhook
  res.status(200).json({ message: 'Webhook received, but not a user.created event' });
}
